# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    paths:
      - 'services/logistica/**'

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    environment: LOGISTICA_CI
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v3
      with:
        python-version: "3.13"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r services/logistica/requirements.txt
    - name: Start PostgreSQL
      run: |
        docker run --name postgres -e POSTGRES_USER=user -e POSTGRES_PASSWORD=secret -e POSTGRES_DB=db-routes  -p 5432:5432 -d postgres
    - name: Test with pytest
      env:
        FLASK_DEBUG: ${{ secrets.FLASK_DEBUG }}
        GMAPS_API_KEY: ${{ secrets.GMAPS_API_KEY }}
        DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        DATABASE_USER: ${{ secrets.DATABASE_USER }}
        GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
        PEDIDO_DESPACHADO_TOPIC: ${{ secrets.PEDIDO_DESPACHADO_TOPIC }}
        PEDIDO_CREADO_TOPIC: ${{ secrets.PEDIDO_CREADO_TOPIC }}
        PEDIDO_CREADO_SUB: ${{ secrets.PEDIDO_CREADO_SUB }}
      run: |
        env && 
        pytest services/logistica